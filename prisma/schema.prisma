datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  // directUrl         = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  KETUA
  SEKJEN
  SEKBEN
  FUNDRAISING
  EO
  MAMET
  EVALUATOR
  LAPANGAN
  MENTOR
  MEDIK
  KEAMANAN
  KREATIF
  PUBDOK
  IT
  MSDM
  PERSONALIA
  PERIZINAN
  LOGISTIK
  PESERTA
}

model Tugas {
  id          Int          @id @default(autoincrement())
  title       String       @unique
  description String       @db.Text
  dueDate     DateTime
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  attachments String?      @db.LongText
  submissions Submission[]
}

model Submission {
  id          String   @id @default(cuid())
  submittedAt DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  tugas       Tugas    @relation(fields: [tugasId], references: [id])
  tugasId     Int
  files       String
  score       Int?
  feedback    String?
}

model Kelompok {
  id      Int    @id @default(autoincrement())
  name    String @unique
  anggota User[]
}

model User {
  id                 String       @id @default(uuid())
  name               String
  nim                String?      @unique
  role               Role         @default(PESERTA)
  password           String?
  phoneNumber        String?
  kelompok           Kelompok?    @relation(fields: [kelompokId], references: [id])
  kelompokId         Int?
  lastPasswordChange DateTime?
  email              String?      @unique
  emailVerified      DateTime?    @map("email_verified")
  image              String?
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  submisiTugas       Submission[]
}

// UNNEDED MODELS TO BE DELETED
model Contents {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
